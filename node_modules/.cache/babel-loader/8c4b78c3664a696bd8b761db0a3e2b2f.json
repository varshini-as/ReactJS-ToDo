{"ast":null,"code":"var _jsxFileName = \"D:\\\\dashboard-router\\\\src\\\\components\\\\CustomTable.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from \"react\";\nimport { Table, Badge } from \"react-bootstrap\";\nimport { X } from 'react-bootstrap-icons';\nimport { UserContext } from \"../App\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CustomTable(_ref) {\n  _s();\n\n  let {\n    classnames,\n    headers,\n    data,\n    columns\n  } = _ref;\n  const {\n    dispatch,\n    setUpdateModal,\n    setOldVal,\n    setCurrentTask\n  } = useContext(UserContext);\n\n  const deleteCell = task => {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"btn del-btn\",\n      onClick: () => dispatch({\n        type: 'DELETE_TASK',\n        payload: task\n      }),\n      children: /*#__PURE__*/_jsxDEV(X, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 16\n    }, this);\n  };\n\n  const updateCell = task => {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary rounded\",\n      id: task.id,\n      onClick: () => {\n        setUpdateModal(true);\n        setOldVal(task.task);\n        setCurrentTask(task);\n      },\n      children: \"Edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 16\n    }, this);\n  };\n\n  if (data === undefined) {\n    console.log('if');\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(Table, {\n    hover: true,\n    bordered: true,\n    className: classnames,\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      style: {\n        \"position\": \"sticky\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: headers.map(h => {\n          return /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: h\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 48\n            }, this)\n          }, h, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 36\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: data.map(row => {\n        // data - array of objects, row - single object\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [columns.map((col, i) => {\n            // col - property of object\n            return col === 'status' ? /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"m-0\",\n              children: [/*#__PURE__*/_jsxDEV(Badge, {\n                bg: row[col] === 'In-progress' ? 'warning' : row[col] === 'Done' ? 'success' : 'danger',\n                children: row[col]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 49\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 45\n            }, this) : /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"align-items-center\",\n              children: row[col]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 45\n            }, this); // access property value\n          }), /*#__PURE__*/_jsxDEV(\"td\", {\n            style: {\n              \"width\": \"118px\"\n            },\n            children: [updateCell(row), deleteCell(row.task)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 33\n          }, this)]\n        }, row.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 29\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CustomTable, \"fDl6NCue55mKmw38S+Z8I8OXf6E=\");\n\n_c = CustomTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomTable\");","map":{"version":3,"names":["React","useContext","Table","Badge","X","UserContext","CustomTable","classnames","headers","data","columns","dispatch","setUpdateModal","setOldVal","setCurrentTask","deleteCell","task","type","payload","updateCell","id","undefined","console","log","map","h","row","col","i"],"sources":["D:/dashboard-router/src/components/CustomTable.js"],"sourcesContent":["import React, { useContext } from \"react\";\r\nimport { Table, Badge } from \"react-bootstrap\";\r\nimport { X } from 'react-bootstrap-icons';\r\nimport { UserContext } from \"../App\";\r\n\r\nexport default function CustomTable({ classnames, headers, data, columns }) {\r\n    const {dispatch, setUpdateModal, setOldVal, setCurrentTask} = useContext(UserContext);\r\n\r\n    const deleteCell = (task) => {\r\n        return <button type=\"submit\"\r\n            className=\"btn del-btn\"\r\n            onClick={() => dispatch({ type: 'DELETE_TASK', payload: task })}\r\n            >\r\n            <X /></button>;\r\n    }\r\n\r\n    const updateCell = (task) => {\r\n        return <button type=\"submit\"\r\n            className=\"btn btn-primary rounded\"\r\n            id={task.id}\r\n            onClick={() => { setUpdateModal(true); setOldVal(task.task); setCurrentTask(task) }}\r\n            >Edit</button>\r\n    }\r\n\r\n    if (data === undefined){\r\n        console.log('if');\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <Table hover bordered className={classnames}>\r\n            <thead style={{\"position\":\"sticky\"}}>\r\n                <tr>\r\n                    {\r\n                        headers.map((h) => {\r\n                            return <td key={h}><b>{h}</b></td>\r\n                        })\r\n                    }\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {\r\n                    data.map(row => {  // data - array of objects, row - single object\r\n                        return (\r\n                            <tr key={row.id}>\r\n                                {\r\n                                    columns.map((col, i) => { // col - property of object\r\n                                        return col === 'status' ?\r\n                                            <p className=\"m-0\">\r\n                                                <Badge bg={row[col] === 'In-progress' ? 'warning' : row[col] === 'Done' ? 'success' : 'danger'}>\r\n                                                    {row[col]}\r\n                                                </Badge>\r\n                                                <option></option>\r\n                                            </p> :\r\n                                            <td className=\"align-items-center\">{row[col]}</td> // access property value\r\n                                    })\r\n                                }\r\n                                <td style={{\"width\": \"118px\"}}>{updateCell(row)}{deleteCell(row.task)}</td>\r\n                            </tr>\r\n                        )\r\n                    })\r\n                }\r\n            </tbody>\r\n        </Table>\r\n    )\r\n\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}