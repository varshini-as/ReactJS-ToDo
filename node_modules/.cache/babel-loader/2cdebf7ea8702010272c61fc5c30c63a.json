{"ast":null,"code":"var _jsxFileName = \"D:\\\\dashboard-router\\\\src\\\\pages\\\\AddTask.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useContext, useState } from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport { UserContext } from \"../App\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AddTask() {\n  _s();\n\n  let taskInput = useRef(\"\"); // access DOM element using useRef()\n\n  const [isDisabled, setDisable] = useState(true);\n  const {\n    setShow,\n    currentTaskList,\n    dispatch,\n    status,\n    handleSelect\n  } = useContext(UserContext);\n\n  const handleInput = obj => {\n    // check for existing entry\n    if (currentTaskList.find(task => task.task === obj.task)) {\n      setShow(true);\n    } // dispatch action if non-empty field and doesn't exist in array\n\n\n    if (obj.task !== '' && currentTaskList.find(task => task.task === obj.task) === undefined) {\n      dispatch({\n        payload: obj,\n        type: 'ADD_TASK'\n      });\n    }\n\n    document.getElementById(\"task\").value = '';\n    setDisable(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mx-auto\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"What do you need to do today?\",\n      id: \"task\",\n      ref: taskInput,\n      onChange: e => taskInput.current.value.length === 0 ? setDisable(true) : setDisable(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n      defaultValue: \"Pending\",\n      style: {\n        \"marginLeft\": \"5px\",\n        \"width\": \"25%\",\n        marginRight: \"5px\"\n      },\n      onChange: e => handleSelect(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        disabled: true,\n        value: \"\",\n        children: \"--Select status--\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Pending\",\n        children: \"Pending\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"In-progress\",\n        children: \"In-progress\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-success pull-right\",\n      onClick: () => handleInput({\n        task: taskInput.current.value,\n        status: status\n      }),\n      disabled: isDisabled,\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AddTask, \"DzuiqHo69OQ0f6Nlqb+6WP+spOQ=\");\n\n_c = AddTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddTask\");","map":{"version":3,"names":["React","useRef","useContext","useState","Form","UserContext","AddTask","taskInput","isDisabled","setDisable","setShow","currentTaskList","dispatch","status","handleSelect","handleInput","obj","find","task","undefined","payload","type","document","getElementById","value","e","current","length","marginRight","target"],"sources":["D:/dashboard-router/src/pages/AddTask.js"],"sourcesContent":["import React, { useRef, useContext, useState } from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport { UserContext } from \"../App\";\r\n\r\nexport default function AddTask() {\r\n\r\n    let taskInput = useRef(\"\"); // access DOM element using useRef()\r\n    const [isDisabled, setDisable] = useState(true);\r\n\r\n    const { setShow, currentTaskList, dispatch, status, handleSelect } = useContext(UserContext);\r\n\r\n    const handleInput = (obj) => {\r\n        // check for existing entry\r\n        if (currentTaskList.find(task => task.task === obj.task)) {\r\n            setShow(true);\r\n        }\r\n        // dispatch action if non-empty field and doesn't exist in array\r\n        if (obj.task !== '' && currentTaskList.find(task => task.task === obj.task) === undefined) {\r\n            dispatch({ payload: obj, type: 'ADD_TASK' });\r\n        }\r\n        document.getElementById(\"task\").value = '';\r\n        setDisable(true);\r\n    }\r\n\r\n    return (\r\n        <div className=\"mx-auto\">\r\n            <input type=\"text\"\r\n                placeholder=\"What do you need to do today?\"\r\n                id=\"task\"\r\n                ref={taskInput}\r\n                onChange={(e) => (taskInput.current.value.length === 0)? setDisable(true) : setDisable(false)} />\r\n            <Form.Select defaultValue={\"Pending\"}\r\n                style={{ \"marginLeft\": \"5px\", \"width\": \"25%\", marginRight: \"5px\" }}\r\n                onChange={(e) => handleSelect(e.target.value)}>\r\n                <option disabled={true} value=\"\">\r\n                    --Select status--\r\n                </option>\r\n                <option value=\"Pending\">Pending</option>\r\n                <option value=\"In-progress\">In-progress</option>\r\n            </Form.Select>\r\n            <button className=\"btn btn-success pull-right\"\r\n                onClick={() => handleInput({ task: taskInput.current.value, status: status })}\r\n                disabled={isDisabled}\r\n            >Add</button>\r\n        </div>\r\n    )\r\n}"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,UAAxB,EAAoCC,QAApC,QAAoD,OAApD;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,SAASC,WAAT,QAA4B,QAA5B;;AAEA,eAAe,SAASC,OAAT,GAAmB;EAAA;;EAE9B,IAAIC,SAAS,GAAGN,MAAM,CAAC,EAAD,CAAtB,CAF8B,CAEF;;EAC5B,MAAM,CAACO,UAAD,EAAaC,UAAb,IAA2BN,QAAQ,CAAC,IAAD,CAAzC;EAEA,MAAM;IAAEO,OAAF;IAAWC,eAAX;IAA4BC,QAA5B;IAAsCC,MAAtC;IAA8CC;EAA9C,IAA+DZ,UAAU,CAACG,WAAD,CAA/E;;EAEA,MAAMU,WAAW,GAAIC,GAAD,IAAS;IACzB;IACA,IAAIL,eAAe,CAACM,IAAhB,CAAqBC,IAAI,IAAIA,IAAI,CAACA,IAAL,KAAcF,GAAG,CAACE,IAA/C,CAAJ,EAA0D;MACtDR,OAAO,CAAC,IAAD,CAAP;IACH,CAJwB,CAKzB;;;IACA,IAAIM,GAAG,CAACE,IAAJ,KAAa,EAAb,IAAmBP,eAAe,CAACM,IAAhB,CAAqBC,IAAI,IAAIA,IAAI,CAACA,IAAL,KAAcF,GAAG,CAACE,IAA/C,MAAyDC,SAAhF,EAA2F;MACvFP,QAAQ,CAAC;QAAEQ,OAAO,EAAEJ,GAAX;QAAgBK,IAAI,EAAE;MAAtB,CAAD,CAAR;IACH;;IACDC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,EAAgCC,KAAhC,GAAwC,EAAxC;IACAf,UAAU,CAAC,IAAD,CAAV;EACH,CAXD;;EAaA,oBACI;IAAK,SAAS,EAAC,SAAf;IAAA,wBACI;MAAO,IAAI,EAAC,MAAZ;MACI,WAAW,EAAC,+BADhB;MAEI,EAAE,EAAC,MAFP;MAGI,GAAG,EAAEF,SAHT;MAII,QAAQ,EAAGkB,CAAD,IAAQlB,SAAS,CAACmB,OAAV,CAAkBF,KAAlB,CAAwBG,MAAxB,KAAmC,CAApC,GAAwClB,UAAU,CAAC,IAAD,CAAlD,GAA2DA,UAAU,CAAC,KAAD;IAJ1F;MAAA;MAAA;MAAA;IAAA,QADJ,eAMI,QAAC,IAAD,CAAM,MAAN;MAAa,YAAY,EAAE,SAA3B;MACI,KAAK,EAAE;QAAE,cAAc,KAAhB;QAAuB,SAAS,KAAhC;QAAuCmB,WAAW,EAAE;MAApD,CADX;MAEI,QAAQ,EAAGH,CAAD,IAAOX,YAAY,CAACW,CAAC,CAACI,MAAF,CAASL,KAAV,CAFjC;MAAA,wBAGI;QAAQ,QAAQ,EAAE,IAAlB;QAAwB,KAAK,EAAC,EAA9B;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAHJ,eAMI;QAAQ,KAAK,EAAC,SAAd;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QANJ,eAOI;QAAQ,KAAK,EAAC,aAAd;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAPJ;IAAA;MAAA;MAAA;MAAA;IAAA,QANJ,eAeI;MAAQ,SAAS,EAAC,4BAAlB;MACI,OAAO,EAAE,MAAMT,WAAW,CAAC;QAAEG,IAAI,EAAEX,SAAS,CAACmB,OAAV,CAAkBF,KAA1B;QAAiCX,MAAM,EAAEA;MAAzC,CAAD,CAD9B;MAEI,QAAQ,EAAEL,UAFd;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAfJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAsBH;;GA1CuBF,O;;KAAAA,O"},"metadata":{},"sourceType":"module"}